table {
  border-collapse: collapse;
  border-spacing: 0;
}

th,
td {
  padding: 0;
}

@include b('table') {
  width: 100%;
  max-width: 100%;
  margin-bottom: $spacer;
  background: #FFFFFF;

  th,
  td {
    padding: $table-cell-padding;
    vertical-align: top;
    border-top: $table-border-width solid $table-border-color;
  }

  th {
    border-bottom: ($table-border-width*2) solid $table-border-color;
  }

  & & {
    background: $gray-faded;
    margin-bottom: 0;
  }

  @include m('sm') {
    th,
    td {
      padding: $table-sm-cell-padding;
    }
  }

  @include m('bordered') {
    th,
    td {
      border: $table-border-width solid $table-border-color;
    }

    th {
      border-bottom: ($table-border-width*2) solid $table-border-color;
    }
  }

  @include m('inverse') {
    color: $gray-faded;
    background: $gray-dark;

    th {
      background: transparent;
    }
  }

  @include m('striped') {
    tbody {
      tr:nth-of-type(odd) {
        background: $table-bg-accent;
      }
    }
  }

  @include m('hover') {
    tbody tr {
      &:hover {
        background-color: $table-bg-hover;
      }
    }
  }

  @include m('reflow') {
    thead {
      float: left;
      th {
        border-bottom: 0;
        border-right: $table-border-width solid $table-border-color;
      }
    }

    tbody {
      display: block;
      white-space: nowrap;
      overflow-x: auto;
      overflow-y: hidden;
    }

    tr {
      float: left;
      th,
      td {
        display: block !important;
        &:last-child {
          border-bottom: $table-border-width solid $table-border-color;
        }
      }
    }
  }
}
